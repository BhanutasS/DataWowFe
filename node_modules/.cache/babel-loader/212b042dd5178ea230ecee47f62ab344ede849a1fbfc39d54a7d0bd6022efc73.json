{"ast":null,"code":"var _jsxFileName = \"/Users/bsavanachai/Desktop/datawowfe/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Box from './Box';\nimport Dropdown from \"./Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [showTasks, setShowTasks] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"All\");\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [selectedTaskId, setSelectedTaskId] = useState(0);\n  const [editingTaskId, setEditingTaskId] = useState(0);\n  const [editingTitle, setEditingTitle] = useState(\"\");\n  const addTaskHandler = event => {\n    event.preventDefault();\n    if (newTaskTitle === '') return;\n    const newTask = {\n      id: tasks.length + 2,\n      title: newTaskTitle,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    setNewTaskTitle(''); // resetting the input box.\n  };\n\n  const changeStatusHandler = taskId => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const handleToggleOptions = taskId => {\n    if (selectedTaskId === taskId) {\n      setSelectedTaskId(0); // If the selected task is clicked again, hide the options\n    } else {\n      setSelectedTaskId(taskId); // Otherwise, show options for the clicked task\n    }\n  };\n\n  const handleOptionSelection = option => {\n    if (option === 'Edit') {\n      const selectedTask = tasks.find(task => task.id === selectedTaskId);\n      if (selectedTask) {\n        setEditingTitle(selectedTask.title);\n      }\n      setEditingTaskId(selectedTaskId);\n    } else if (option === 'Delete') {\n      const filteredTasks = tasks.filter(task => task.id !== selectedTaskId);\n      setTasks(filteredTasks);\n    }\n    setSelectedTaskId(0);\n  };\n  const saveTaskHandler = event => {\n    event.preventDefault();\n    setTasks(tasks.map(task => task.id === editingTaskId ? {\n      ...task,\n      title: editingTitle\n    } : task));\n    setEditingTaskId(0);\n    setEditingTitle(\"\");\n  };\n  useEffect(() => {\n    const completedTasks = tasks.filter(task => task.completed).length;\n    setProgress(completedTasks);\n    if (selectedOption === 'Done') {\n      setShowTasks(tasks.filter(task => task.completed));\n    } else if (selectedOption === 'Undone') {\n      setShowTasks(tasks.filter(task => !task.completed));\n    } else {\n      setShowTasks(tasks);\n    }\n  }, [selectedOption, tasks]);\n  useEffect(() => {\n    fetch('http://localhost:3001/todos') // Adjust the URL based on your server.\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setTasks(data)).catch(error => console.log('Error while fetching tasks:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"progress-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-max\",\n        style: {\n          width: '450px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: progress * 450 / tasks.length\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#e8e7e3'\n        },\n        children: [tasks.filter(task => task.completed).length, \" completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      style: {\n        width: '100px',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'grid'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: [\"All\", \"Done\", \"Undone\"],\n          onSelect: setSelectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), showTasks.map(task => /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: task.completed ? 'completed' : '',\n          style: {\n            marginTop: '10px'\n          },\n          children: [editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: saveTaskHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingTitle,\n              onChange: e => setEditingTitle(e.target.value),\n              style: {\n                marginTop: '10px',\n                border: 'None',\n                backgroundColor: '#f5f5f5',\n                outline: 'none',\n                fontSize: '16px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                backgroundColor: 'blueviolet',\n                border: '1px solid #ddd',\n                borderRadius: '6px',\n                color: \"white\",\n                position: \"absolute\",\n                right: '0',\n                marginRight: '10px',\n                marginTop: '10px'\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n            className: task.completed ? 'completed' : '',\n            style: {\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => {\n                changeStatusHandler(task.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this), task.title, /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                border: \"none\",\n                background: \"transparent\",\n                fontSize: \"1em\",\n                right: '0',\n                position: 'absolute',\n                marginTop: '10px',\n                marginRight: '8px'\n              },\n              onClick: () => handleToggleOptions(task.id),\n              children: \"\\u2022\\u2022\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this), selectedTaskId === task.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-menu\",\n            style: {\n              right: '0'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleOptionSelection(\"Edit\"),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleOptionSelection(\"Delete\"),\n                style: {\n                  color: 'red'\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addTaskHandler,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTaskTitle,\n            onChange: event => setNewTaskTitle(event.target.value),\n            placeholder: \"Add new task\",\n            style: {\n              border: 'none',\n              backgroundColor: '#f5f5f5',\n              outline: 'none',\n              fontSize: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"wyWoKTy8aldosmz3CnGcTWvvI3A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Box","Dropdown","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","showTasks","setShowTasks","progress","setProgress","selectedOption","setSelectedOption","newTaskTitle","setNewTaskTitle","selectedTaskId","setSelectedTaskId","editingTaskId","setEditingTaskId","editingTitle","setEditingTitle","addTaskHandler","event","preventDefault","newTask","id","length","title","completed","changeStatusHandler","taskId","updatedTasks","map","task","handleToggleOptions","handleOptionSelection","option","selectedTask","find","filteredTasks","filter","saveTaskHandler","completedTasks","fetch","then","response","ok","Error","json","data","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","color","alignItems","justifyContent","display","position","options","onSelect","marginTop","onSubmit","type","value","onChange","e","target","border","backgroundColor","outline","fontSize","borderRadius","right","marginRight","checked","background","onClick","placeholder","_c","$RefreshReg$"],"sources":["/Users/bsavanachai/Desktop/datawowfe/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Box from './Box'\nimport Dropdown from \"./Dropdown\";\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface Task {\n    id: number;\n    title: string;\n    completed: boolean;\n}\n\nconst App: React.FC = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n\n    const [showTasks, setShowTasks] = useState<Task[]>([]);\n    const [progress, setProgress] = useState<number>(0);\n    const [selectedOption, setSelectedOption] = useState<string>(\"All\");\n    const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n    const [selectedTaskId, setSelectedTaskId] = useState(0);\n    const [editingTaskId, setEditingTaskId] = useState<number>(0);\n    const [editingTitle, setEditingTitle] = useState(\"\");\n\n    const addTaskHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (newTaskTitle === '') return;\n        const newTask = {id: tasks.length + 2, title: newTaskTitle, completed: false};\n        setTasks([...tasks, newTask]);\n        setNewTaskTitle('');  // resetting the input box.\n    };\n\n    const changeStatusHandler = (taskId: number) => {\n        const updatedTasks = tasks.map(task => {\n            if (task.id === taskId) {\n                return {...task, completed: !task.completed};\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const handleToggleOptions = (taskId: number) => {\n        if (selectedTaskId === taskId) {\n            setSelectedTaskId(0); // If the selected task is clicked again, hide the options\n        } else {\n            setSelectedTaskId(taskId); // Otherwise, show options for the clicked task\n        }\n    };\n\n    const handleOptionSelection = (option: string) => {\n        if (option === 'Edit') {\n            const selectedTask = tasks.find(task => task.id === selectedTaskId);\n            if (selectedTask) {\n                setEditingTitle(selectedTask.title);\n            }\n            setEditingTaskId(selectedTaskId);\n        } else if (option === 'Delete') {\n            const filteredTasks = tasks.filter(task => task.id !== selectedTaskId);\n            setTasks(filteredTasks);\n        }\n        setSelectedTaskId(0);\n    };\n\n    const saveTaskHandler = (event: React.FormEvent) => {\n        event.preventDefault();\n        setTasks(tasks.map(task => task.id === editingTaskId ? {...task, title: editingTitle} : task));\n        setEditingTaskId(0);\n        setEditingTitle(\"\");\n    };\n\n    useEffect(() => {\n        const completedTasks = tasks.filter(task => task.completed).length;\n        setProgress(completedTasks)\n        if (selectedOption === 'Done') {\n            setShowTasks(tasks.filter(task => task.completed))\n        } else if (selectedOption === 'Undone') {\n            setShowTasks(tasks.filter(task => !task.completed))\n        } else {\n            setShowTasks(tasks)\n        }\n    }, [selectedOption, tasks])\n\n    useEffect(() => {\n        fetch('http://localhost:3001/todos') // Adjust the URL based on your server.\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => setTasks(data))\n            .catch(error => console.log('Error while fetching tasks:', error));\n    }, []);\n\n    return (\n        <div className=\"app\">\n            <Box className=\"progress-box\">\n                <h2>Progress</h2>\n                <div className=\"progress-bar-max\" style={{width: '450px'}}>\n                    <div className=\"progress-bar\"\n                         style={{width: progress * 450 / tasks.length}}></div>\n                </div>\n                <p style={{color: '#e8e7e3'}}>{tasks.filter(task => task.completed).length} completed</p>\n            </Box>\n            <ul className=\"task-list\"\n                style={{width: '100px', alignItems: 'center', justifyContent: 'center', display: 'grid'}}>\n                <div style={{display: \"flex\", position: \"relative\"}}>\n                    <h2>Tasks</h2>\n                    <Dropdown options={[\"All\", \"Done\", \"Undone\"]} onSelect={setSelectedOption}></Dropdown>\n                </div>\n                {showTasks.map(task => (\n                    <Box>\n                        <li key={task.id} className={task.completed ? 'completed' : ''} style={{marginTop: '10px'}}>\n                            {editingTaskId === task.id ? (\n                                <form onSubmit={saveTaskHandler}>\n                                    <input\n                                        type=\"text\"\n                                        value={editingTitle}\n                                        onChange={e => setEditingTitle(e.target.value)}\n                                        style={{\n                                            marginTop: '10px',\n                                            border: 'None',\n                                            backgroundColor: '#f5f5f5',\n                                            outline: 'none',\n                                            fontSize: '16px'\n                                        }}\n                                    />\n                                    <button type=\"submit\" style={{\n                                        backgroundColor: 'blueviolet',\n                                        border: '1px solid #ddd',\n                                        borderRadius: '6px',\n                                        color: \"white\",\n                                        position: \"absolute\",\n                                        right: '0',\n                                        marginRight: '10px',\n                                        marginTop: '10px'\n                                    }}>\n                                        Save\n                                    </button>\n                                </form>\n                            ) : (\n                                <li className={task.completed ? 'completed' : ''} style={{marginTop: '10px'}}>\n                                    <input type=\"checkbox\" checked={task.completed} onChange={() => {\n                                        changeStatusHandler(task.id)\n                                    }}/>\n                                    {task.title}\n                                    <button style={{\n                                        border: \"none\",\n                                        background: \"transparent\",\n                                        fontSize: \"1em\",\n                                        right: '0',\n                                        position: 'absolute',\n                                        marginTop: '10px',\n                                        marginRight: '8px',\n                                    }}\n                                            onClick={() => handleToggleOptions(task.id)}>\n                                        •••\n                                    </button>\n                                </li>\n                            )}\n                            {selectedTaskId === task.id &&\n                                <div className=\"popup-menu\" style={{\n                                    right: '0'\n                                }}>\n                                    <ul>\n                                        <li onClick={() => handleOptionSelection(\"Edit\")}>Edit</li>\n                                        <li onClick={() => handleOptionSelection(\"Delete\")}\n                                            style={{color: 'red'}}>Delete\n                                        </li>\n                                    </ul>\n                                </div>}\n                        </li>\n                    </Box>\n                ))}\n                <Box>\n                    <form onSubmit={addTaskHandler}>\n                        <input\n                            type=\"text\"\n                            value={newTaskTitle}\n                            onChange={(event) => setNewTaskTitle(event.target.value)}\n                            placeholder=\"Add new task\"\n                            style={{border: 'none', backgroundColor: '#f5f5f5', outline: 'none', fontSize: '16px'}}\n                        />\n                    </form>\n                </Box>\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}