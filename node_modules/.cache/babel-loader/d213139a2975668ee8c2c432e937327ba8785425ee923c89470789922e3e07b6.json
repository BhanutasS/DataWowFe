{"ast":null,"code":"var _jsxFileName = \"/Users/bsavanachai/Desktop/datawowfe/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Box from './Box';\nimport Dropdown from \"./Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: 'Publish a new blog',\n    completed: true\n  }, {\n    id: 2,\n    title: 'Buy food for dinner',\n    completed: false\n  }, {\n    id: 3,\n    title: 'Call Marie at 10.00 PM',\n    completed: false\n  }, {\n    id: 4,\n    title: 'Write a react blog post',\n    completed: false\n  }]);\n  const [showTasks, setShowTasks] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"All\");\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [selectedTaskId, setSelectedTaskId] = useState(0);\n  const addTaskHandler = event => {\n    event.preventDefault();\n    if (newTaskTitle === '') return;\n    const newTask = {\n      id: tasks.length + 1,\n      title: newTaskTitle,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    setNewTaskTitle(''); // resetting the input box.\n  };\n\n  const changeStatusHandler = taskId => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const handleToggleOptions = taskId => {\n    if (selectedTaskId === taskId) {\n      setSelectedTaskId(0); // If the selected task is clicked again, hide the options\n    } else {\n      setSelectedTaskId(taskId); // Otherwise, show options for the clicked task\n    }\n  };\n\n  const handleOptionSelection = option => {\n    if (option === 'Edit') {} else if (option === 'Delete') {\n      const filteredTasks = tasks.filter(task => task.id !== selectedTaskId);\n      setTasks(filteredTasks);\n    }\n    setSelectedTaskId(0);\n  };\n  useEffect(() => {\n    const completedTasks = tasks.filter(task => task.completed).length;\n    setProgress(completedTasks);\n    if (selectedOption === 'Done') {\n      setShowTasks(tasks.filter(task => task.completed));\n    } else if (selectedOption === 'Undone') {\n      setShowTasks(tasks.filter(task => !task.completed));\n    } else {\n      setShowTasks(tasks);\n    }\n  }, [selectedOption, tasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"progress-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-max\",\n        style: {\n          width: '450px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: progress * 450 / tasks.length\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#e8e7e3'\n        },\n        children: [tasks.filter(task => task.completed).length, \" completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      style: {\n        width: '100px',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'grid'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: [\"All\", \"Done\", \"Undone\"],\n          onSelect: setSelectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), showTasks.map(task => /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: task.completed ? 'completed' : '',\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onChange: () => {\n              changeStatusHandler(task.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), task.title]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            border: \"none\",\n            background: \"transparent\",\n            fontSize: \"1em\",\n            right: '0',\n            position: 'absolute',\n            marginTop: '10px',\n            marginRight: '8px'\n          },\n          onClick: () => handleToggleOptions(task.id),\n          children: \"\\u2022\\u2022\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), selectedTaskId === task.id && /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: ['Edit', 'Delete'],\n          onSelect: handleOptionSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addTaskHandler,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTaskTitle,\n            onChange: event => setNewTaskTitle(event.target.value),\n            placeholder: \"Add new task\",\n            style: {\n              border: 'none',\n              backgroundColor: '#f5f5f5',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"jLQKNc+6nE0UzTjTeGOJqkXRqwo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Box","Dropdown","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","title","completed","showTasks","setShowTasks","progress","setProgress","selectedOption","setSelectedOption","newTaskTitle","setNewTaskTitle","selectedTaskId","setSelectedTaskId","addTaskHandler","event","preventDefault","newTask","length","changeStatusHandler","taskId","updatedTasks","map","task","handleToggleOptions","handleOptionSelection","option","filteredTasks","filter","completedTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","color","alignItems","justifyContent","display","position","options","onSelect","marginTop","type","checked","onChange","border","background","fontSize","right","marginRight","onClick","onSubmit","value","target","placeholder","backgroundColor","outline","_c","$RefreshReg$"],"sources":["/Users/bsavanachai/Desktop/datawowfe/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Box from './Box'\nimport Dropdown from \"./Dropdown\";\n\ninterface Task {\n    id: number;\n    title: string;\n    completed: boolean;\n}\n\nconst App: React.FC = () => {\n    const [tasks, setTasks] = useState<Task[]>([\n        {id: 1, title: 'Publish a new blog', completed: true},\n        {id: 2, title: 'Buy food for dinner', completed: false},\n        {id: 3, title: 'Call Marie at 10.00 PM', completed: false},\n        {id: 4, title: 'Write a react blog post', completed: false},\n    ]);\n\n    const [showTasks, setShowTasks] = useState<Task[]>([]);\n    const [progress, setProgress] = useState<number>(0);\n    const [selectedOption, setSelectedOption] = useState<string>(\"All\");\n    const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n    const [selectedTaskId, setSelectedTaskId] = useState(0);\n\n    const addTaskHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (newTaskTitle === '') return;\n        const newTask = {id: tasks.length + 1, title: newTaskTitle, completed: false};\n        setTasks([...tasks, newTask]);\n        setNewTaskTitle('');  // resetting the input box.\n    };\n\n    const changeStatusHandler = (taskId: number) => {\n        const updatedTasks = tasks.map(task => {\n            if (task.id === taskId) {\n                return {...task, completed: !task.completed};\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const handleToggleOptions = (taskId: number) => {\n        if (selectedTaskId === taskId) {\n            setSelectedTaskId(0); // If the selected task is clicked again, hide the options\n        } else {\n            setSelectedTaskId(taskId); // Otherwise, show options for the clicked task\n        }\n    };\n\n    const handleOptionSelection = (option: string) => {\n        if (option === 'Edit') {\n        } else if (option === 'Delete') {\n            const filteredTasks = tasks.filter(task => task.id !== selectedTaskId);\n            setTasks(filteredTasks);\n        }\n        setSelectedTaskId(0);\n    };\n\n    useEffect(() => {\n        const completedTasks = tasks.filter(task => task.completed).length;\n        setProgress(completedTasks)\n        if (selectedOption === 'Done') {\n            setShowTasks(tasks.filter(task => task.completed))\n        } else if (selectedOption === 'Undone') {\n            setShowTasks(tasks.filter(task => !task.completed))\n        } else {\n            setShowTasks(tasks)\n        }\n    }, [selectedOption, tasks])\n\n    return (\n        <div className=\"app\">\n            <Box className=\"progress-box\">\n                <h2>Progress</h2>\n                <div className=\"progress-bar-max\" style={{width: '450px'}}>\n                    <div className=\"progress-bar\"\n                         style={{width: progress * 450 / tasks.length}}></div>\n                </div>\n                <p style={{color: '#e8e7e3'}}>{tasks.filter(task => task.completed).length} completed</p>\n            </Box>\n            <ul className=\"task-list\"\n                style={{width: '100px', alignItems: 'center', justifyContent: 'center', display: 'grid'}}>\n                <div style={{display: \"flex\", position: \"relative\"}}>\n                    <h2>Tasks</h2>\n                    <Dropdown options={[\"All\", \"Done\", \"Undone\"]} onSelect={setSelectedOption}></Dropdown>\n                </div>\n                {showTasks.map(task => (\n                    <Box>\n                        <li key={task.id} className={task.completed ? 'completed' : ''} style={{marginTop: '10px'}}>\n                            <input type=\"checkbox\" checked={task.completed} onChange={() => {\n                                changeStatusHandler(task.id)\n                            }}/>\n                            {task.title}\n                        </li>\n                        <button style={{\n                            border: \"none\",\n                            background: \"transparent\",\n                            fontSize: \"1em\",\n                            right: '0',\n                            position: 'absolute',\n                            marginTop: '10px',\n                            marginRight: '8px',\n                        }}\n                                onClick={() => handleToggleOptions(task.id)}>\n                            •••\n                        </button>\n                        {selectedTaskId === task.id && <Dropdown options={['Edit', 'Delete']} onSelect={handleOptionSelection} />}\n                    </Box>\n                ))}\n                <Box>\n                    <form onSubmit={addTaskHandler}>\n                        <input\n                            type=\"text\"\n                            value={newTaskTitle}\n                            onChange={(event) => setNewTaskTitle(event.target.value)}\n                            placeholder=\"Add new task\"\n                            style={{border: 'none', backgroundColor: '#f5f5f5', outline: 'none'}}\n                        />\n                    </form>\n                </Box>\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}